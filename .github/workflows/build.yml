name: Build VST3

on:
  push:
    branches: [ "**" ]
    tags:     [ "v*" ]
  pull_request:

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ windows-latest, macos-latest ]
        os: [ windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      # macOS 用のツールチェーン（Xcode は標準で入ってます）
      #- name: Configure (macOS)
      #  if: runner.os == 'macOS'
      #  run: |
      #    cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      # Windows 用のツールチェーン
      - name: Configure (Windows)
        if: runner.os == 'Windows'
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022"

      - name: Build
        run: cmake --build build --config Release

      - name: Archive plugin
        shell: bash
        run: |
          set -e

          # 再帰的に .vst3 ディレクトリを探索
          FOUND=$(find build -type d -name "*.vst3" | sort || true)

          if [ -z "$FOUND" ]; then
            echo "No .vst3 found. Build tree:"
            ls -R build || true
            exit 1
          fi

          echo "Found VST3(s):"
          echo "$FOUND"

          # 1つ目だけをパッケージ（複数あるなら必要に応じて loop）
          FIRST=$(echo "$FOUND" | head -n1)

          if [ "$RUNNER_OS" = "Windows" ]; then
            7z a VoiceModeler-win-vst3.zip "$FIRST"
            echo "ARTIFACT=VoiceModeler-win-vst3.zip" >> $GITHUB_ENV
          else
            /usr/bin/ditto -c -k --sequesterRsrc --keepParent "$FIRST" VoiceModeler-mac-vst3.zip
            echo "ARTIFACT=VoiceModeler-mac-vst3.zip" >> $GITHUB_ENV
          fi


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.ARTIFACT }}
          if-no-files-found: error

  release:
    name: Release on tag
    needs: [ build ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/VoiceModeler-*-vst3.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
